{
  "variables": {
    "build_prefix": "",
    "docker_version": "",
    "cuda_drivers_version": "",
    "image_version": "",
    "oci_availability_domain": "",
    "oci_compartment_ocid": "",
    "oci_subnet_ocid": ""
  },
  "builders": [
    {
      "type": "oracle-oci",
      "availability_domain": "{{user `oci_availability_domain`}}",
      "compartment_ocid": "{{user `oci_compartment_ocid`}}",
      "subnet_ocid": "{{user `oci_subnet_ocid`}}",
      "shape": "VM.Standard2.1",
      "base_image_ocid": "ocid1.image.oc1.eu-frankfurt-1.aaaaaaaaxroekfbow3kdrdjlwao6tsxxfcb23xmqrdjtjcay2ow52eijvzqa",
      "image_name": "{{user `build_prefix`}}dstack-cuda-{{user `image_version`}}",
      "instance_name": "packer-{{user `build_prefix`}}dstack-cuda-{{user `image_version`}}",
      "ssh_username": "ubuntu"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": ["cloud-init status --long --wait"]
    },
    {
      "type": "shell",
      "script": "provisioners/wait-for-dpkg-lock.sh"
    },
    {
      "type": "shell",
      "scripts": [
        "provisioners/kernel/apt-upgrade.sh",
        "provisioners/kernel/apt-daily.sh",
        "provisioners/kernel/apt-packages.sh",
        "provisioners/kernel/kernel-tuning.sh"
      ]
    },
    {
      "type": "file",
      "source": "provisioners/install-docker.sh",
      "destination": "/tmp/install-docker.sh"
    },
    {
      "type": "file",
      "source": "provisioners/run-docker",
      "destination": "/tmp/run-docker"
    },
    {
      "type": "shell",
      "inline": [
        "cd /tmp",
        "chmod +x install-docker.sh",
        "./install-docker.sh --version {{user `docker_version`}}"]
    },
    {
      "type": "shell",
      "environment_vars": ["CUDA_DRIVERS_VERSION={{user `cuda_drivers_version`}}"],
      "script": "provisioners/cuda.sh"
    },
    {
      "type": "shell",
      "script": "provisioners/install-nvidia-docker.sh"
    },
    {
      "type": "shell",
      "environment_vars": ["IMAGE_VERSION={{user `image_version`}}"],
      "script": "provisioners/pull-docker-images.sh"
    }
  ]
}
