"""Add FleetModel

Revision ID: 61bf981d7a67
Revises: 5ad8debc8fe6
Create Date: 2024-07-11 10:49:24.188029

"""

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

import dstack._internal.server.models

# revision identifiers, used by Alembic.
revision = "61bf981d7a67"
down_revision = "5ad8debc8fe6"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fleets",
        sa.Column("id", sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "project_id", sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False
        ),
        sa.Column("created_at", dstack._internal.server.models.NaiveDateTime(), nullable=False),
        sa.Column(
            "last_processed_at", dstack._internal.server.models.NaiveDateTime(), nullable=False
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("deleted_at", dstack._internal.server.models.NaiveDateTime(), nullable=True),
        sa.Column(
            "status", sa.Enum("SUBMITTED", "ACTIVE", "FAILED", name="fleetstatus"), nullable=False
        ),
        sa.Column("status_message", sa.Text(), nullable=True),
        sa.Column("spec", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name=op.f("fk_fleets_project_id_projects"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_fleets")),
    )
    with op.batch_alter_table("instances", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "fleet_id", sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True
            )
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_instances_fleet_id_fleets"), "fleets", ["fleet_id"], ["id"]
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("instances", schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f("fk_instances_fleet_id_fleets"), type_="foreignkey")
        batch_op.drop_column("fleet_id")

    op.drop_table("fleets")
    # ### end Alembic commands ###
