name: Build Docker

on: [workflow_dispatch]

env:
  IMAGE_VERSION: "0.2"

jobs:
  build-docker:
    strategy:
      matrix:
        python: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]
    defaults:
      run:
        working-directory: docker
    runs-on: ubuntu-latest
    steps:
     - name: Checkout repository
       uses: actions/checkout@v3
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
     - name: Login to DockerHub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Set up QEMU
       uses: docker/setup-qemu-action@v2
     - name: Build and upload to DockerHub
       run: |
         docker buildx build --platform linux/arm64/v8 --build-arg PYTHON=${{ matrix.python }} --push --provenance=false --tag dstackai/miniforge:py${{ matrix.python }}-${{ env.IMAGE_VERSION }}-arm64 -f cpu/Dockerfile .
         docker buildx build --platform linux/amd64 --build-arg PYTHON=${{ matrix.python }} --push --provenance=false --tag dstackai/miniforge:py${{ matrix.python }}-${{ env.IMAGE_VERSION }}-amd64 -f cpu/Dockerfile .
         docker manifest create dstackai/miniforge:py${{ matrix.python }}-${{ env.IMAGE_VERSION }} --amend dstackai/miniforge:py${{ matrix.python }}-${{ env.IMAGE_VERSION }}-arm64 --amend dstackai/miniforge:py${{ matrix.python }}-${{ env.IMAGE_VERSION }}-amd64
         docker manifest push dstackai/miniforge:py${{ matrix.python }}-${{ env.IMAGE_VERSION }}
         docker buildx build --platform linux/amd64 --build-arg PYTHON=${{ matrix.python }} --push --provenance=false --tag dstackai/miniforge:py${{ matrix.python }}-${{ env.IMAGE_VERSION }}-cuda-11.4 -f cuda/Dockerfile .
